import Head from "next/head";
import { useEffect, useState } from "react";

type Lesson = {
  _id: string;
  lessonTitle: string;
  isComplete: boolean;
};

type Chapter = {
  _id: string;
  chapter: string;
  chapterOrder: number;
  lessons: Lesson[];
};

type ChaptersData = Chapter[];

export default function Home() {
  const [chapters, setChapters] = useState<ChaptersData>([]);

  const fetchData = async () => {
    try {
      const res = await fetch("/api/chapter/get");
      const data = await res.json();

      setChapters(data.data);
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  const updateIsLessonComplete = (
    checked: boolean,
    chapterID: string,
    lessonID: string
  ) => {
    setChapters((prev) => {
      let tempPrev = [...prev];
      tempPrev.forEach(({ lessons, _id }) => {
        if (_id === chapterID) {
          lessons.forEach((lesson) => {
            if (lesson._id === lessonID) {
              lesson.isComplete = checked;
            }
          });
        }
      });

      return [...tempPrev];
    });
  };

  const handleCheck = async (
    checked: boolean,
    chapterID: string,
    lessonID: string
  ) => {
    try {
      // Optimistic UI update
      updateIsLessonComplete(checked, chapterID, lessonID);

      await fetch("/api/chapter/update", {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          chapterID,
          lessonID,
          isComplete: checked,
        }),
      });

      fetchData();
    } catch (error) {
      console.error(error);
    }
  };

  let index = 0;

  return (
    <div>
      <Head>
        <title>Progress Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="p-6">
        {chapters.map(({ chapter, chapterOrder, lessons, _id: chapterID }) => (
          <div key={chapterID}>
            <h2 className="text-2xl font-bold">
              {chapterOrder}. {chapter}
            </h2>

            {lessons.map(({ lessonTitle, isComplete, _id: lessonID }) => (
              <div key={lessonID} className="flex gap-2 ml-6">
                <input
                  type="checkbox"
                  checked={isComplete}
                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>
                    handleCheck(e.target.checked, chapterID, lessonID)
                  }
                />
                <h4 className="text-lg">
                  {++index}. {lessonTitle}
                </h4>
              </div>
            ))}
          </div>
        ))}
      </main>
    </div>
  );
}
